pipeline {
    agent any

    environment {
        DOCKER_CREDENTIALS_ID = 'jungmin-docker'
        REPO_URL = 'https://github.com/jungmin7315/B-Dool-Server.git'
        DOCKER_HUB_URL = 'jungmin7315'
        IMAGE_NAME = "${DOCKER_HUB_URL}/chat-service"
        KUBECONFIG_PATH = '/root/.kube/kubeconfig'
    }

    options {
        buildDiscarder(logRotator(numToKeepStr: '10'))
    }

    stages {
        stage('Setup') {
            steps {
                echo 'Setting up environment with timestamps...'
            }
        }

        stage('Checkout') {
            steps {
                git branch: 'master', url: "${REPO_URL}"
            }
        }

        stage('Build') {
            steps {
                // gradlew 파일의 절대 경로 또는 상대 경로를 ChatService로 지정
                sh 'chmod +x ChatService/gradlew'
                sh 'ChatService/gradlew clean build'
            }
        }

        stage('Build Docker Image') {
            steps {
                script {
                    docker.withRegistry('https://index.docker.io/v1/', "${DOCKER_CREDENTIALS_ID}") {
                        def dockerImage = docker.build("${IMAGE_NAME}:${BUILD_NUMBER}", 'ChatService')
                        dockerImage.push()
                        dockerImage.push("latest")
                    }
                }
            }
        }

        stage('Deploy') {
            steps {
                echo 'Deploying ChatService to Kubernetes...'
                withKubeConfig([credentialsId: 'kubernetes-credentials']) {
                    sh """
                        kubectl set image deployment/chat-service chat-service=${IMAGE_NAME}:${BUILD_NUMBER} -n default
                        kubectl rollout status deployment/chat-service -n default
                    """
                }
            }
        }
    }

    post {
        success {
            echo 'ChatService가 성공적으로 빌드, 푸시 및 배포되었습니다.'
        }
        failure {
            echo '빌드 또는 푸시 실패!'
        }
    }
}
