version: '3.8'
services:
  mysql:
    container_name: mysql
    image: mysql:latest
    volumes:
      - ./mysql/bdool/etc/mysql/conf.d:/etc/mysql/conf.d:ro
      - ./mysql/bdool/var/lib/mysql:/var/lib/mysql
      - ./mysql/bdool/var/log/mysql:/var/log/mysql
    environment:
      - MYSQL_DATABASE:bdooldb
      - MYSQL_ROOT_PASSWORD=1234
      - MYSQL_ROOT_HOST=%
    command: ['--character-set-server=utf8mb4', '--collation-server=utf8mb4_unicode_ci']
    ports:
      - "3306:3306"
    networks:
      - mynetwork
    restart: always
    
  mongodb:
    container_name: mongo
    image: mongo:latest
    ports:
      - 27017:27017
    volumes:
      - ./mongodb:/data/bdooldb
    environment:
      - MONGO_INITDB_ROOT_USERNAME=root
      - MONGO_INITDB_ROOT_PASSWORD=password
      - MONGO_INITDB_DATABASE=mydb
    networks:
      - mynetwork
    restart: always

  redis:
    container_name: redis
    image: redis:latest
    ports:
      - 6379:6379
    command: redis-server --requirepass password
    volumes:
      - ./redis/data:/data
      - ./redis/conf/redis.conf:/usr/local/conf/redis.conf
    labels:
      - "name=redis"
      - "mode=standalone"
    networks:
      - mynetwork
    restart: always

  postgres:
    container_name: postgres
    image: postgres:latest
    volumes:
      - ./postgres:/var/lib/postgresql/data
    ports:
      - "5432:5432"
    environment:
      POSTGRES_USER: root
      POSTGRES_PASSWORD: password
      POSTGRES_DB: mydb
    networks:
      - mynetwork
    restart: always

  member-hub-service:
    image: member-hub-service
    container_name: member-hub-service
    build:
      context: ./projects/member/
      dockerfile: Dockerfile
    ports:
      - "8080:8080"
    networks: 
      - mynetwork

  # Notification Service
  notification-service:
    image: notification-service
    container_name: notification-service
    build:
      context: ./projects/notification/
      dockerfile: Dockerfile
    ports:
      - "8082:8082"
    depends_on:
      - mysql
    environment:
      - SPRING_DATASOURCE_URL=jdbc:mysql://mysql:3306/bdooldb
      - SPRING_DATASOURCE_USERNAME=root
      - SPRING_DATASOURCE_PASSWORD=1234
    networks:
      - mynetwork

  # Auth Service
  auth-service:
    image: auth-service
    container_name: auth-service
    build:
      context: ./projects/auth/
      dockerfile: Dockerfile
    ports:
      - "8081:8081"
    depends_on:
      - redis
      - mysql
    environment:
      - SPRING_DATASOURCE_URL=jdbc:mysql://mysql:3306/bdooldb
      - SPRING_DATASOURCE_USERNAME=root
      - SPRING_DATASOURCE_PASSWORD=1234
      - SPRING_REDIS_HOST=redis
      - SPRING_REDIS_PORT=6379
      - SPRING_REDIS_PASSWORD=password
    networks:
      - mynetwork

networks:
  mynetwork:
    driver: bridge